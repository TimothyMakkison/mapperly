//HintName: Mapper.g.cs
// <auto-generated />
#nullable enable
public partial class Mapper
{
    private partial global::B Map(global::A src, int value)
    {
        return MapToB(src, new global::Riok.Mapperly.Abstractions.ReferenceHandling.Internal.PreserveReferenceHandler(), value);
    }

    private global::B MapToB(global::A source, global::Riok.Mapperly.Abstractions.ReferenceHandling.IReferenceHandler refHandler, int value)
    {
        if (refHandler.TryGetReference<global::A, global::B>(source, out var existingTargetReference))
            return existingTargetReference;
        var target = new global::B()
        {
            Value = value.ToString()
        };
        refHandler.SetReference<global::A, global::B>(source, target);
        target.StringValue = source.StringValue;
        return target;
    }
}
